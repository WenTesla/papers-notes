# FLASH: A Comprehensive Approach to Intrusion Detection via Provenance Graph Representation Learning（FLASH：基于来源图表示学习的入侵检测综合方法）

## 摘要

FLASH，一种可扩展的 IDS，通过图神经网络 (GNN) 在数据来源图上利用图表示学习。FLASH使用基于word2vec的语义编码器来捕获基本的语义属性（例如，进程名称和文件路径）以及起源图中事件的时间顺序。此外，FLASH结合了一种新的基于gnn的上下文编码器，可以有效地将局部和全局图结构编码为表达性节点嵌入。为了学习良性节点行为，我们使用了一个轻量级分类器，它结合了GNN和Word2Vec嵌入。



## 专业名词

入侵检测系统（ids）

APT

图神经网络 (GNN)

## 工作总结

我们提出了一种基于来源的 IDS，即 FLASH，它**利用来源图中的上下文和结构信息来增强其检测能力**。

我们引入了一个两步过程，**分别使用 Word2Vec 和 GNN 生成语义和上下文嵌入**。此过程之后通过轻量级分类器模型进行实时异常检测，确保系统的可扩展性和效率。

我们提供两种方案——选择性图遍历和嵌入回收数据库——这使得图表示学习对于 IDS 设置变得实用

开源地址：https://github.com/DART-Laboratory/Flash-IDS

## 存在的入侵检测的限制

#### 语义信息忽略

FLASH采用了基于word2vec的嵌入技术，将出现在出处图中的各种节点属性（如进程名称、命令行参数、文件路径和IP地址）编码为语义丰富的特征向量

#### 时间因果顺序忽略

修改word2ec技术

#### 可伸缩性挑战

#### 颗粒度检测

为了解决粗粒度检测的挑战，FLASH通过使用GNN识别单个恶意节点（例如进程和文件）来进行细粒度异常检测，而不是使用包含良性节点的整个异常子图。

------

## 攻击场景

1. 攻击者发送钓鱼邮件
2. 受害者打开邮件附件，攻击者访问受害者系统
3. 击代理建立与命令和控制（C&C）服务器的连接
4. 一旦代理找到所需的文件，它就从命令服务器下载有效负载，并将数据泄露到服务器。

![img](https://cdn.xljsci.com/literature/112641717/page3/qhogoj.png)

------

## 已存在的IDS的限制

![img](https://cdn.xljsci.com/literature/112641717/page3/81lh2w.png)



### 语义编码

### 时间编码

现有的基于来源的 IDS 不考虑系统事件的时间顺序，而仅关注每个节点的事件频率

### 可测量性

### 检测颗粒度

### 上下文警报

### 针对模仿攻击的鲁棒性

> 鲁棒性：‌**‌[鲁棒性](https://www.baidu.com/s?wd=鲁棒性&usm=2&ie=utf-8&rsv_pq=951bf3bf0200dfa8&oq=鲁棒性&rsv_t=8b6aehSXcED%2BUthb0khRhk5rgO%2BpoFg3PniUoVvT8FyMWoegFtkcWUZpLO0&sa=re_dqa_generate)（Robustness）是指系统在面临内部结构和外部环境变化时，保持其性能和功能稳定的能力**‌

个人理解：鲁棒性等于抗压能力



### Ai生成的研究思路

这篇文章提出了一个名为FLASH的综合性入侵检测方法，该方法通过系统日志构建出一种证明图（provenance graph），并利用图表示学习技术来检测网络威胁。研究框架由五个关键模块组成：证明图构造器、基于Word2Vec的语义编码器、基于图神经网络（GNN）的上下文编码器、嵌入数据库和异常检测器。

首先，系统日志被转换成证明图，包含进程节点和对象节点，节点之间的边表示事件类型和时间戳。接着，使用Word2Vec模型将系统实体的属性（如进程名和文件路径）编码成向量空间，以便模型能够利用。然后，GNN被应用于上下文感知编码，生成的嵌入向量存储在数据库中，供后续的轻量级分类器在威胁检测时使用。

研究方法包括利用Word2Vec进行语义编码，以及使用GNN进行上下文编码，这些技术帮助模型学习系统行为的语义和上下文嵌入。通过这些嵌入向量，下游的分类器能够区分正常和异常行为，从而实现入侵检测。文章还假设收集的审计日志和嵌入回收数据库的完整性始终得到维护，以确保证明图的可靠性。

文章的结论是，FLASH能够有效地用于检测和分析网络安全威胁。通过实验验证了该方法的有效性，但具体的实验结果和性能指标在这段摘要中并未提及。

## 威胁模型和假设

### 假设

- 我们假设攻击者是隐蔽的，并通过将其与合法的背景数据混合来主动隐藏其恶意行为。
- 攻击者可能会使用零日漏洞攻击系统，这意味着没有已知的攻击模式可用于训练。
- 攻击者必须在系统记录中留下可识别的模式，以执行与典型行为不同的恶意活动。
- 收集的审计日志和嵌入的回收数据库通过使用现有的防篡改存储一直保持完整性。

## 系统设计

![架构图](https://cdn.xljsci.com/literature/112641717/page4/m8so6z.png)

**由五个关键模块组成：**

- **证明图构造器**
- **基于Word2Vec的语义编码器**
- **基于图神经网络（GNN）的上下文编码器**
- **嵌入数据库**
- **异常检测器。**

### 来源图构建

将系统日志转换为来源图

1. Flash解释系统日志
2. FLASH 通过以可配置的批次处理系统日志来管理实时日志收集 
3. Flash将每一批日志进行分析并转化为来源图
4. 最后，FLASH使用解析后的数据构建起源图

### 语义属性编码

应用 Word2Vec 模型将这些属性转换为密集向量空间

> Word2Vec 是一种基于神经网络的方法，擅长学习词向量表示。它的工作原理是通过浅层神经网络预测单词的上下文

我们的模型考虑每个节点类型的以下节点属性：进程节点的进程名称和命令行参数、文件节点的文件路径、套接字节点的网络 IP 地址和端口以及模块节点的模块名称。能帮助生成语义向量。

算法如下：

![算法](https://oss.xljsci.com//literature/112641717/page0/1731934338903.png)

### 时间编码

我们通过基于时间戳按时间顺序排列系统事件来启动这种方法，从而促进将时间顺序集成到我们的句子中。我们将位置编码合并到输入嵌入中，以传达有关序列中每个标记的位置的信息。

通过将 Word2Vec 嵌入与位置编码相结合，我们的模型不仅可以捕获单词之间的语义关联，还可以捕获摘要句子中单词的顺序。
$$
PE(pos,2i)=sin(\frac{pos}{10000^{2i/d_{model}}}) \\
PE(pos,2i+1)=sin(\frac{pos}{10000^{2i/d_{model}}}) \\
Emb_i=Emb_i+PE_i
$$


### 来源图表示学习

我们以离线方式运行 GNN 以生成上下文嵌入，随后将其存储起来以供轻量级分类器模型稍后使用。

#### 选择性图遍历

原则（TPs）如下：

TP1-独特的边缘采样： 在这个遍历原理中，我们只对两个节点之间相同类型的单条边进行采样

TP2-低优先级事件排除

TP3-特定于执行的信息过滤

TP4-用户特定属性处理

目的减少在完整的起源图上运行 GNN 的计算开销，同时仍然为节点生成信息丰富且结构丰富的向量表示.

算法如下
$$
h_v^{(k)}=\sigma(W^{(k)}\cdot AGGREGATE_k(h_u^{(k-1)}:u\in N(v)\cup v))
$$


#### 训练与加权交叉熵损失

**损失函数**
$$
L(y,f(x)=-\sum_{i=1}^{n}(w_iy_ilog(f(x)_i)+(1-y_i)log(1-f(x)_i))
$$


## 嵌入回收数据库

为了在实时威胁检测期间有效检索和存储这些 GNN 输出向量，我们构建了一个专门的键值存储。

KEY（**持久节点标识符 (PNI)**）包含**process names, file paths, module paths, and network flow IP addresses**

相应的值封装了 GNN 派生的嵌入，以及与该特定节点关联的一组邻居。

目的：优化实时异常检测和减少计算开销

为了派生(derive?) PNI，我们利用属性抽象技术来删除特定于用户和执行的信息。这确保了存储的嵌入是可通用的并且适用于企业内各种主机上的来源图。

- 用户抽象模式
- 网络连接抽象
- 模块路径抽象模式

#### 利用预先计算的嵌入

我们使用 **Jaccard 索引**来比较节点的存储邻域和当前邻域，然后将其分配给预存储的 GNN 嵌入。
$$
J(A,B)=\frac{|A\cap B|}{|A\cup B|}
$$

> Jaccard 指数通过计算两个集合的交集大小与其并集大小的比率来衡量两个集合之间的相似性。

## 轻量级的分类器

FLASH 通过比较预测节点类型和实际节点类型来检测异常节点。该模型考虑邻域结构和节点属性来学习与各种节点类型相关的良性模式

## 攻击演化图构建

创建 AEG 的过程

![攻击演化图生成](https://oss.xljsci.com//literature/112641717/page0/1731984378371.png)

## 评估

略

## 总结

在本文中，我们提出了FLASH，一种新型的基于主机的入侵检测系统，利用来源图表示学习来解决准确性，实用性和可扩展性方面的挑战。FLASH采用语义和上下文编码器来捕获基本的图形属性，以及用于实时威胁检测的嵌入回收数据库。我们的广泛评估证实了FLASH具有卓越的检测准确性，抗模仿攻击的弹性，以及加快警报验证的潜力。

## 附录

