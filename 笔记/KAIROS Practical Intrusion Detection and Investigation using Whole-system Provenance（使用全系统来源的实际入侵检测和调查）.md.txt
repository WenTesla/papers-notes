# KAIROS: Practical Intrusion Detection and Investigation using Whole-system Provenance（使用全系统来源的实际入侵检测和调查）

## 缩写

基于来源的入侵检测系统（PIDSes）



## 摘要

四个维度：

- 基于来源的入侵检测系统（PIDSes）：范围（PIDSes能否检测到跨应用边界渗透的现代攻击？）、
- 攻击不可知性（PIDSes能否在不知道攻击特征的前提下检测到新的攻击？）
- 时效性（PIDSes能否在主机系统运行时有效地监控？）
- 攻击重构（PIDSes能否从大型来源图中提取攻击活动，以便系统管理员能够轻松理解并快速响应系统入侵？）

我们提出了KAIROS，这是第一个同时满足所有四个维度需求的PIDS，而现有的方法至少牺牲了一个维度，并且难以达到可比的检测性能。

KAIROS利用一种新颖的基于图形神经网络的编码器-解码器架构，该架构学习来源图结构变化的时间演变，以量化每个系统事件的异常程度。然后，基于这些细粒度的信息，KAIROS重建攻击足迹，生成紧凑的总结图，准确地描述系统审计日志流上的恶意活动。使用最先进的基准数据集，我们证明KAIROS优于以前的方法。

## 背景与动机

### 系统日志

我们可以使用内核事件日志机制（如Windows ETW和Linux Audit）捕获系统级数据来源，这些机制由不同的操作系统本地支持。或者，专门的内核内参考监视器，如Hi-Fi[22]和CamFlow[9]，可以跟踪底层内核抽象（例如，索引节点和进程）之间的细粒度数据流，以捕获数据来源。

### 举例

<img src="https://cdn.xljsci.com/literature/120364819/page3/wdvip8.png" alt="img" style="zoom: 200%;" />

> 描述了KAIROS自动生成的激励示例中的攻击活动（第2.2节）。矩形、椭圆形和菱形分别表示进程、文件和套接字。R=读取，W=写入，**O=打开，S=发送，Rc=接收，C=克隆，E=执行**。为了清晰起见，我们添加了颜色和虚线元素，以突出KAIROS生成的输出。KAIROS从原始来源图中提取实体节点和边，以重建攻击。根据攻击地面真相，虚线粉色节点和边缘是KAIROS错过的与攻击相关的活动。蓝色节点和边是地面实况中没有明确提及但KAIROS包含的活动。

#### 挑战

攻击未知：apt的低而慢的攻击模式使得基于异常的检测变得困难，因为如果没有充分考虑执行上下文，攻击活动可能隐藏在大量良性活动中，并且看起来与正常行为相似

攻击重建：

范围：我们必须至少运行多个针对各种应用程序（例如，Firefox和邮件）的Winnower实例，以便在我们的场景中潜在地检测APT。

时间性：

## 威胁模型

我们的工作考虑攻击者试图通过利用软件漏洞和部署通信后门来控制系统并保持持久存在。

KAIROS 是一个基于异常的检测系统；因此，我们进一步假设当 KAIROS 从良性系统执行的来源图中学习时，主机系统不受攻击者的影响，并且 KAIROS 在初始学习期间彻底观察系统活动

## 框架

KAIROS 是一个基于异常的入侵检测和攻击调查系统。它通过来源图中的因果依赖关系，利用最先进的深度图学习和社区发现，以 (1) 在事先不了解任何特定攻击特征的情况下检测异常系统行为，以及 (2) 根据信息流关联检测到的异常内核对象之间。

<img src="https://cdn.xljsci.com/literature/120364819/page5/9oyhbh.png" alt="img" style="zoom:200%;" />

### 四个组件

#### 图的构建和表示

KAIROS 以流式传输方式分析图表，按时间顺序摄取图表中出现的边。

KAIROS 将每个事件转换为有向、带时间戳的边，其中源节点代表事件的主题(subject)，目标节点(objects)代表所作用的对象

![核心主体和客体之间的关系类型（即交互）以及我们考虑的节点属性](https://cdn.xljsci.com/literature/120364819/page4/984cny.png)

KAIROS 使用基于节点属性的分层特征哈希技术 [^32] 对节点的特征进行编码。分层特征散列将高维输入向量投影到低维特征空间，同时保留原始输入之间的分层相似性。

##### 算法细节

-todo



#### 图像学习

当图中出现新的边（例如图 2 中的粗体边 2⃝→ 7）时，KAIROS 使用编码器-解码器架构来重建边。

KAIROS 学习来源图中的时间和结构关系。

当新的边 et 在时间 t 出现在流图 Gt 中时，编码器根据 t 之前邻域的状态将 et 嵌入到潜在表示中（我们将其表示为 t−）。
$$
G_{t-}=G_t-e_t
$$
训练的目标是最小化实际边缘类型（当图中出现新边缘时）与解码器根据其嵌入预测的类型之间的差异。





#### 异常检测

KAIROS 构建时间窗口队列来检测部署期间的异常情况。

#### 异常调查

为了帮助系统管理员推理警报，KAIROS 自动从异常时间窗口队列生成紧凑的攻击摘要图。





















[^32]: Z. Zhang, P. Qi, and W. Wang, “Dynamic malware analysis with feature  engineering and feature learning,” AAAI Conference on Artificial  Intelligence, 2021.
